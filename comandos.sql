SELECT 
-- SQL SERVER, POSTGRES, ORACLE, MYSQL

SELECT coluna1, coluna2
FROM tabela

SELECT * 
FROM tabela;

SELECT *
FROM person.Person;

SELECT Title
FROM person.Person;

/* A EQUIPE DE MARKETING PRECISA FAZER UMA PESQUISA SOBRE NOMES MAIS COMUNS DE SEUS CLIENTES
E PRECISA DO NOME E SOBRENOME DE TODOS OS CLIENTES QUE ESTÃO CADASTRADOS NO SISTEMA*/

first name, last name

SELECT firstName, lastName
FROM person.Person;

SELECT DISTINCT coluna1,colun2
FROM tabela

### DESAFIO NÚMERO 2 ###
QUANTOS NOMES SOBRENOMES ÚNICOS TEMOS EM NOSSA TABELA PERSON.PERSON?

SELECT DISTINCT lastName
FROM person.Person;

/*********** AULA 3 - WHERE ****************/

SELECT coluna1,coluna2,coluna_n
FROM tabela
WHERE condicao;

/* 

OPERADOR - DESCRIÇÃO
=          IGUAL
>          MAIOR QUE
<          MENOR QUE
>=         MAIOR QUE OU IGUAL
<=         MENOR QUE OU IGUAL
<>         DIFERENTE DE
AND        OPERADOR LÓGICO E
OR         OPERADOR LÓGICO OU

*/

/* 3 - A EQUIPE DE PRODUÇÃO DE PRODUTOS PRECISA DO NOME DE TODAS AS PEÇAS QUE PESAM MAIS DE 500 QUILOS
MAS NÃO MAIS QUE 700 PARA INSPEÇÃO 

SELECT Name
FROM production.Product
WHERE weight > 500 and weight < 700

-- WEIGHT -> PESO


-- DESAFIO 2 
FOI PEDIDO PELO MARKETING UMA RELAÇÃO DE TODOS OS EMPREGADOS(employees) QUE SÃO CASADOS
(single=solteiro, married = casado) E SÃO ASALARIADOS(salaried)

SELECT * 
FROM HumanResources.Employee
WHERE MaritalStatus = 'm' AND salariedFlag = 1

-- DESAFIO 3
UM USUÁRIO CHAMADO PETER KREBS ESTÁ DEVENDO UM PAGAMENTO,CONSIGA O EMAIL DELE PARA QUE POSSAMOS
ENVIAR UMA COBRANÇA
BusinessEntityId
(você vai ter que usar a tablea person.person e depois a tabela person.emailaddress)

SELECT *
FROM Person.Person
WHERE FirstName = 'peter' and LastName = 'krebs'

SELECT *
FROM person.EmailAddress
WHERE BusinessEntityID = 26

*/

-- COUNT 

SELECT COUNT(DISTINCT colun1)
FROM TABELA

/* DESAFIOS */

/* EU QUERO SABER QUANTOS PRODUTOS TEMOS CADASTRADOS EM NOSSA TABELA DE PRODUTOS 
(production.product) */

SELECT COUNT(*)
FROM production.Product

/* EU QUERO SABER QUANTOS TAMANHOS DE PRODUTOS TEMOS CADASTRADOS EM NOSSA TABELA
(production.product) */

SELECT COUNT(size)
FROM production.Product

/* COMANDO TOP */

SELECT TOP 10 *
FROM TABELA

/* ORDER BY */

SELECT coluna1, coluna2
FROM tabela
ORDER BY coluna1 asc/desc 

SELECT FirstName, LastName
FROM person.Person
ORDER BY FirstName,LastName desc

/* OBTER O PRODUCTID DOS 10 PRODUTOS MAIS CAROS CADASTRADOS NO SISTEMA, LISTANDO DO MAIS CARO
PARA O MAIS BARATO.

- VOCÊ TERÁ QUE USAR A TABELA PRODUCTION.PRODUCT
- VOCÊ TERÁ QUE USAR ORDER BY E TOP
- E PARA ORDERNAR VOCÊ TERÁ QUE USAR O ORDER BY ASC OU DESC, DEPENDENDO DO RESULTADO
QUE ESTÁ BUSCANDO */

SELECT TOP 10 productId
FROM Production.product
ORDER BY listprice desc

/* OBTER O NOME E O NÚMERO DO PRODUTO DOS PRODUTOS QUE TEM O PRODUCTID ENTRE 1~4

- VOCÊ TERÁ QUE USAR A TABELA PRODUCTION.PRODUCT
- VOCÊ TERÁ QUE USAR ORDER BY E TOP
- E PARA ORDERNAR VOCÊ TERÁ QUE USAR O ORDER BY ASC OU DESC, DEPENDENDO DO RESULTADO
QUE ESTÁ BUSCANDO */

SELECT TOP 4 name,productNumber
FROM production.Product
ORDER BY productID asc

/* BETWEEN */

OS BETWEENS SÃO USADOS PARA ENCONTRAR VALOR
ENTRE UM VALOR MÍNIMO E VALOR MÁXIMO 

VALOR BETWEEN MÍNIMO AND MÁXIMO

SELECT * 
FROM Production.Product
WHERE ListPrice between 1000 and 1500;

SELECT * 
FROM Production.Product
WHERE ListPrice NOT between 1000 and 1500;

SELECT * 
FROM HumanResources.Employee
WHERE HireDate BETWEEN '2009/01/01' AND '2010/01/01'
ORDER BY HireDate; 

/* OPERADOR IN */

O OPERADOR IN É USADO JUNTO COM O WHERE

PARA VERIFICAR SE UM VALOR CORRESPONDE COM QUALQUER VALOR PASSADO
NA LISTA DE VALORES

VALOR IN(VALOR1,VALOR2);

SELECT * 
FROM Person.Person
WHERE BusinessEntityID IN (2,7,13);

SELECT *
FROM Person.Person
WHERE BusinessEntityID = 2
OR BusinessEntityID = 7
OR BusinessEntityID = 13;

/* LIKE */

VAMOS DIZER QUE VOCÊ QUER ENCONTRAR UMA PESSOA NO BANCO DE DADOS
QUE VOCÊ SABE QUE O NOME DELA ERA OVI.... ALGUMA COISA

SELECT * 
FROM Person.Person
WHERE FirstName LIKE 'ovi%';

SELECT * 
FROM Person.Person
WHERE FirstName LIKE '%ovi';

SELECT * 
FROM Person.Person
WHERE FirstName LIKE '%essa%';

SELECT * 
FROM Person.Person
WHERE FirstName LIKE '%ro_';

/* DESAFIOS FUNDAMENTOS EM SQL */

1- QUANTOS PRODUTOS TEMOS CADASTRADOS NO SISTEMA QUE CUSTAM MAIS QUE 1500 DOLARES?

> VOCÊ TERÁ QUE USAR A TABELA PRODUCTION.PRODUCT
> TERÁ QUE USAR O COUNT E WHERE E MAIS UM OPERADOR DE COMPARAÇÃO

SELECT COUNT(ListPrice)
FROM production.Product
WHERE ListPrice > 1500;

2 - QUANTAS PESSOAS TEMOS COM O SOBRENOME QUE INICIA COM A LETRA P?

> TERÁ QUE USAR A TABELA person.Person
> TERÁ QUE USAR O COUNT, WHERE E LIKE

SELECT COUNT(LastName)
FROM person.Person
WHERE LastName LIKE 'p%';

3- EM QUANTAS CIDADES ÚNICAS ESTÃO CADASTRADOS NOSSOS CLIENTES?

> TERÁ QUE USAR A TABLEA person.address
> TERÁ QUE USAR COUNT, DISTINCT

SELECT count(distinct(city))
FROM person.Address;

4- QUAIS SÃO AS CIDADES ÚNICAS QUE TEMOS CADASTRADAS EM NOSSO SISTEMA?

> TERÁ QUE USAR A TABELA person.address
> SERÁ BEM SIMILAR A RESPOSTA ANTERIOR

SELECT DISTINCT(city)
FROM person.address;

5- QUANTOS PRODUTOS VERMELHOS TEM PREÇO ENTRE 500 A 1000 DOLARES?

> TERÁ QUE USAR A TABELA production.product
> TERÁ QUE USAR WHERE, BETWEEN

SELECT COUNT(*)
FROM production.Product
WHERE color = 'red'
AND ListPrice BETWEEN 500 AND 1000;

6- QUANTOS PRODUTOS CADASTRADOS TEM A PALAVRA 'ROAD' NO NOME DELES?

> TERÁ QUE USAR A TABELA production.product
> TERÁ QUE USAR COUNT, LIKE

SELECT COUNT(*)
FROM production.Product
WHERE name LIKE '%road%';

/* MIN, MAX, SUM AVG */

-- FUNÇÕES DE AGREGAÇÃO BASICAMENTE AGREGAM OU COMBINAM DADOS DE UMA TABELA EM 1 RESULTADO SÓ

SELECT TOP 10 SUM(linetotal)
FROM Sales.SalesOrderDetail;

/* GROUP BY + DESAFIOS (INTERMEDIÁRIO) */

-- O GROUP BY BASICAMENTE DIVIDE O RESULTADO DA SUA PESQUISA EM GRUPOS
-- PARA CADA GRUPO VOCÊ PODE APLICAR UMA FUNÇÃO DE AGREGAÇÃO, POR EXEMPLO:
    -- CALCULAR A SOMA DE ITENS
    -- CONTAR O NÚMERO DE ITENS NAQUELE GRUPO 

/*  SELECT coluna1,funcaoAgregacao(coluna2)
    FROM nomeTabela
    GROUP BY coluna1; */

SELECT *
FROM Sales.SalesOrderDetail

SELECT SpecialOfferID, SUM(UnitPrice) AS "SOMA"
FROM Sales.SalesOrderDetail
GROUP BY SpecialOfferID;

SELECT SpecialOfferID, UnitPrice
FROM Sales.SalesOrderDetail
WHERE SpecialOfferID = 9;

-- VAMOS DIZER QUE EU QUERO SABER QUANTOS CADA PRODUTO FOI VENDIDO ATÉ HOJE

SELECT ProductID,COUNT(ProductID) AS "CONTAGEM"
FROM Sales.SalesOrderDetail
GROUP BY ProductID;

-- VAMOS DIZER QUE EU QUERO SABER QUANTOS NOMES DE CADA NOME TEMOS CADASTRADOS
-- EM NOSSO BANCO DE DADOS.

SELECT firstName,COUNT(firstName) AS "CONTAGEM"
FROM Person.Person
GROUP BY FirstName;

-- NA TABELA production.product EU QUERO SABER A MÉDIA DE PREÇO PARA OS PRODUTOS QUE SÃO PRATAS (SILVER)

SELECT color, AVG(ListPrice) as "PRECO"
FROM Production.Product
WHERE color = 'silver'
GROUP BY Color;

-- DESAFIOS

/* 1 - EU PRECISO SABER QUANTAS PESSOAS TEM O MESMO MIDDLENAME AGRUPADAS POR 
   MIDDLENAME */

   -- DICAS TABELA PERSON.PERSON
   -- USAR GROUP BY E UMA FUNÇÃO DE AGREGAÇÃO

SELECT MiddleName,COUNT(FirstName) as "QUANTIDADE"
FROM Person.Person
GROUP BY MiddleName;

/* 2 - EU PRECISO SABER EM MÉDIA QUAL É A QUANTIDADE (QUANTITY) QUE CADA PRODUTO É VENDIDO NA
LOJA */

-- TABELA SALES.SALESORDERDETAIL
-- USAR O GROUP BY E UMA FUNÇÃO DE AGREGAÇÃO

SELECT ProductID, AVG(OrderQty) AS 'MEDIA'
FROM Sales.SalesOrderDetail
GROUP BY ProductID;

/* 3 - EU QUERO SABER QUAL FORAM AS 10 VENDAS QUE NO TOTAL TIVERAM OS MAIORES VALORES DE VENDA
(LINE TOTAL) POR PRODUTO DO MAIOR VALOR PARA O MENOR */

-- TABELA SALES.SALESORDERDETAIL
-- USAR GROUP BY E UMA FUNÇÃO DE AGREGAÇÃO
-- SE ATENTAR A POR O QUE VOCÊ ESTÁ ORDENANDO

SELECT ProductID, SUM(LineTotal)
FROM Sales.SalesOrderDetail
GROUP BY ProductID
ORDER BY SUM(LineTotal) DESC;

/* 4 - EU PRECISO SABER QUANTOS PRODUTOS E QUAL É QUANTIDADE MÉDIA DE PRODUTOS TEMOS CADASTRADOS
NAS NOSSAS ORDEM DE SERVIÇO (WORKORDER), AGRUPADOS POR PRODUCTID */

-- USAR A TABELA PRODUCTION.WORKORDER
-- USAR GROUP BY E UMA FUNÇÃO DE AGREGAÇÃO

SELECT ProductID,COUNT(ProductID) AS "CONTAGEM",
AVG(orderqty) AS 'MEDIA'
FROM Production.WorkOrder
GROUP BY ProductID;

-- HAVING + DESAFIOS 

/* O HAVING É BASICAMENTE MUITO USADO EM JUNÇÃO COM O GROUP BY PARA FILTRAR
RESULTADOS DE UM AGRUPAMENTO. 

DE UMA MAIS SIMPLES EU GOSTO DE ENTENDER ELE COMO BASICAMENTE UM WHERE PARA DADOS
AGRUPADOS.

SELECT COLUNA1,FUNCAO_AGREGACAO(COLUNA2)
FROM NOME_TABELA
GROUP BY COLUNA1
HAVING CONDICAO;

A GRANDE DIFERENÇA ENTRE HAVING E WHERE

É QUE O GROUP BY É APLICADO DEPOIS QUE OS DADOS JÁ FORAM AGRUPADOS, ENQUANTO O WHERE
É APLICADO ANTES DOS DADOS SEREM AGRUPADOS. */

/* VAMOS DIZER QUE QUEREMOS SABER QUAIS NOMES NO SISTEMA TEM UMA OCORRÊNCIA MAIOR QUE
10 VEZES */

SELECT FirstName, COUNT(FirstName) AS "QUANTIDADE"
FROM Person.Person
GROUP BY FirstName
HAVING COUNT(FirstName) > 10;

/* VAMOS DIZER QUE QUEREMOS SABER QUAIS NOMES NO SISTEMA TEM UMA OCORRÊNCIA MAIOR QUE
10 VEZES PORÉM SOMENTE ONDE O TÍTULO É 'MR.' */

SELECT FirstName, COUNT(FirstName) AS "QUANTIDADE"
FROM Person.Person
WHERE Title = 'MR.'
GROUP BY FirstName
HAVING COUNT(FirstName) > 10;

-- QUEREMOS SABER QUAIS PRODUTOS QUE NO TOTAL ESTÃO ENTR 162K A 500K

SELECT TOP 10 * 
FROM Sales.SalesOrderDetail;

-- DESAFIOS 

/* 1 - ESTAMOS QUERENDO IDENTIFICAR AS PROVINCIAS(STATEPROVINCEDID) COM O MAIOR NÚMERO 
DE CADASTROS NO NOSSO SISTEMA, ENTÃO É PRECISO ENCONTRAR QUAIS PROVÍNCIAS (STATEPROVINCEID) 
ESTÃO REGISTRADAS NO BANCO DE DADOS MAIS QUE 1000 VEZES. */

-- TABELA PERSON.ADDRESS
-- USAR HAVING, COUNT E OPERADORES MATEMÁTICOS

SELECT StateProvinceId,COUNT(StateProvinceID) AS "QUANTIDADE"
FROM Person.Address
GROUP BY StateProvinceID
HAVING COUNT(StateProvinceID) > 1000;

/* 2 - SENDO QUE SE TRATA DE UMA MULTINACIONAL, OS GERENTES QUEREM SABER QUAIS PRODUTOS
(PRODUCTID) NÃO ESTÃO TRAZENDO EM MÉDIA NO MÍNIMO 1 MILHÃO EM TOTAL DE VENDAS (LINETOTAL) */

-- TABELA SALES.SALESORDERDETAIL
-- USAR HAVING, COUNT E OPERADORES MATEMÁTICOS

SELECT ProductID, AVG(lineTotal)
FROM Sales.SalesOrderDetail
GROUP BY ProductID
HAVING AVG(lineTotal) < 1000000;

------- COMANDO AS + DESAFIOS ----------

SELECT TOP 10 *
FROM Production.product;

SELECT TOP 10 AVG(ListPrice) as "preço médio"
FROM Production.product;

/* 1 - ENCONTRAR O FIRSTNAME E LASTNAME NA TABELA PERSON.PERSON */
    SELECT TOP 10 FirstName AS "Nome", LastName AS "Sobrenome"
    FROM Person.Person;

/* 2 - PRODUCTNUMBER DA TABELA PRODUCTION.PRODUCT "NUMERO DO PRODUTO" */
    SELECT TOP 10 ProductNumber AS "Numero do Produto"
    FROM Production.Product;

/* 3 - SALES.SALESORDERDETAIL UNITEPRICE "PREÇO UNITÁRIO" */
    SELECT UnitPrice AS "Preço Unitário"
    FROM Sales.SalesOrderDetail;

---- INNER JOIN + DESAFIOS -----

-- EXISTEM 3 TIPOS GERAIS DE JOINS
-- INNER JOIN, OUTER JOIN E SELF-JOIN 

SELECT C.ClienteId,C.Nome,E.Rua,E.Cidade
FROM Cliente C
INNER JOIN Endereco E ON E.EnderecoId = C.EnderecoId;

-- |2| BRUNO | RUA NORTE | SÃO PAULO

-- BusinessEntityId,FirstName,LastName,EmailAddress

SELECT p.BusinessEntityId,p.FirstName,p.LastName, pe.EmailAddress
FROM Person.Person AS P
INNER JOIN Person.EmailAddress PE ON p.BusinessEntityId = pe.BusinessEntityId;

/* VAMOS DIZER QUE NÓS QUEREMOS OS NOMES DOS PRODUTOS E AS INFORMAÇÕES DE SUAS
SUBCATEGORIAS */

-- PREÇO,NOME DO PRODUTO, NOME DA SUBCATEGORIA

SELECT TOP 10 *
FROM Production.Product;

SELECT TOP 10 *
FROM Production.ProductSubcategory;

SELECT pr.ListPrice,pr.Name,pc.Name
FROM Production.Product Pr
INNER JOIN Production.ProductSubcategory PC ON PC.ProductCategoryID = 
pr.ProductSubcategoryID;

SELECT TOP 10 *
FROM Person.BusinessEntityAddress;

SELECT TOP 10 *
FROM Person.Address;

SELECT TOP 10 *
FROM Person.BusinessEntityAddress BA
INNER JOIN Person.Address PA ON PA.AddressID = BA.AddressID;


SELECT TOP 10 *
FROM Person.PhoneNumberType

SELECT TOP 10 *
FROM Person.PersonPhone

-- BusinessEntityId,Name,PhoneNumberTypeId,PhoneNumber

SELECT pp.BusinessEntityId,pt.name,pt.PhoneNumberTypeId,pp.PhoneNumber
FROM person.PersonPhone PP
INNER JOIN Person.PhoneNumberType PT ON PT.PhoneNumberTypeID = pp.PhoneNumberTypeID;

-------------------------------------------------------------------------------

SELECT TOP 10 * 
FROM Person.StateProvince;

SELECT TOP 10 *
FROM Person.address;

-- QUERO AddressId,City,StateProvinceID,Nome do estado

SELECT TOP 10 PA.AddressID,PA.City,PS.StateProvinceID,PS.Name
FROM Person.Address PA 
INNER JOIN Person.StateProvince PS ON PS.StateProvinceID = PA.StateProvinceID;

-- SUBQUERY (SUBSELECT)

-- MONTE UM RELATÓRIO DE TODOS OS PRODUTOS CADASTRADOS QUE TEM O PREÇO DE VENDA ACIMA DA MÉDIA

/* SELECT AVG(ListPrice)
   FROM Production.Product;

   SELECT *
   FROM Production.Product
   WHERE ListPrice > 438.66 */

SELECT *
FROM Production.Product
WHERE ListPrice > (SELECT AVG(ListPrice) FROM Production.Product)

-- EU QUERO SABER O NOME DOS MEUS FUNCIONÁRIOS QUE TEM O CARGO DE 'DESIGN ENGINEER'

SELECT *
FROM Person.Person
WHERE BusinessEntityID in (5,6,15);

SELECT *
FROM HumanResources.Employee
WHERE JobTitle = 'Design Engineer';

SELECT FirstName
FROM Person.Person
WHERE BusinessEntityID IN (
SELECT BusinessEntityID FROM HumanResources.Employee
WHERE JobTitle = 'Design Engineer')

SELECT P.FirstName
FROM Person.Person P
INNER JOIN HumanResources.Employee E ON P.BusinessEntityID = E.BusinessEntityID
AND E.JobTitle = 'Design Engineer'

-------- DESAFIO ---------

-- 1 - ENCONTRE TODOS OS ENDEREÇOS QUE ESTÃO NO ESTADO DE 'ALBERTA', PODE TRAZER TODAS INFORMAÇÕES
-- USAR PERSON.ADDRESS E PERSON.STATEPROVINCE


SELECT *
FROM Person.Address
WHERE StateProvinceID IN (
    SELECT StateProvinceID FROM Person.StateProvince
    WHERE Name = 'Alberta'
)